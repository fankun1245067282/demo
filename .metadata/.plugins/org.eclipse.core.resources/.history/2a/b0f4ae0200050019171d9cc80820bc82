package com.fk.test;

import java.lang.reflect.Field;
import java.util.Arrays;

import sun.misc.Unsafe;

public class SwapObj {
	public static Unsafe unsafe;
	static {
		Field field;
		try {
			field = Unsafe.class.getDeclaredField("theUnsafe");
			field.setAccessible(true);
			unsafe = (Unsafe) field.get(null);
		} catch (NoSuchFieldException | SecurityException e) {
			e.printStackTrace();
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}

	}
	static class Swap{
		public Swap(int id) {
			this.id = id;
		}
		public Swap() {
		}
		private int id;

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}

		@Override
		public String toString() {
			return "Swap [id=" + id + "]";
		}
		
	}
	private static long normalize(int value) {
		if (value >= 0)
			return value;
		return (~0L >>> 32) & value;
	}
	static void myswap(Swap o1,Swap o2) {
		Object[] obj = new Object[]{o1,o2};
		int baseOffset = unsafe.arrayBaseOffset(obj.getClass());
		int n = unsafe.getInt(obj, (long)baseOffset);
		int n2 = normalize(unsafe.getInt(obj, (long)baseOffset)+4);
		System.out.println("baseOffset:"+baseOffset);
		System.out.println("n:"+n);
		System.out.println("n:"+n2);
		System.out.println(Arrays.toString(obj));
		unsafe.putLong(obj, baseOffset, n2);
		unsafe.putLong(obj, baseOffset+4,n);
		System.out.println(Arrays.toString(obj));
	}
	public static void main(String[] args) {
		Swap a = new Swap(1);
		Swap b = new Swap(2);
		System.out.println("a:"+a);
		System.out.println("b:"+b);
		
		myswap(a,b);
		System.out.println("a:"+a);
		System.out.println("b:"+b);
	}
}

