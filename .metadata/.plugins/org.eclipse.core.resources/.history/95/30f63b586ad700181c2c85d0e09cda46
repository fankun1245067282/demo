package com.fk.test.paxos;

import java.util.Random;

/**
 * 提议者
 * 
 * @author Administrator Proposer发送获取相应的最大的M0的value值
 */
public class Proposer extends Thread {
	private Acceptor[] acceptors = null;// 决策者
	private Integer num = null;
	private Integer proposerNum = null;
	private int times = 0;// 第几轮发送请求了
	private Response[] responseArr = null;

	public Proposer(String name, Acceptor[] acceptors, Integer proposerNum) {
		super(name);
		this.acceptors = acceptors;
		this.proposerNum = proposerNum;

	}

	public void run() {
		int length = acceptors.length;
		Random random = new Random();
		while(true) {
			times++;
			
			Request request = new Request();
			if(responseArr==null) {
				request.setValue(proposerNum);
			}else {	
				int maxRequestNum = 0;
				int k = 0;
				for (int i = 0; i < acceptors.length; i++) {
					int p = acceptors[i].propseResponse.get(num).getAcceptRequestNum();
					if (p > maxRequestNum) {
						maxRequestNum = p;
						k = i;
					}
				}
				request.setValue(acceptors[k].propseResponse.get(num).getValue());
			}
			num = TestPaxos.getNextNum();
			request.setProposerName(this.getName());
			request.setRequestNum(num);
			System.out.println("提议者"+this.getName()+" 第"+times+"轮发送请求："+request);
			
			for (int i = 0; i < acceptors.length; i++) {
				try {
					Thread.sleep(random.nextInt(10)+10);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				try {
					acceptors[i].requests.put(request);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			responseArr = new Response[5];
			int n = 0;
			while(n!=5) {//当5个都回复了，就可以结束了
				n=0;
				for (int i = 0; i < acceptors.length; i++) {
					if(acceptors[i].propseResponse.get(num)!=null) {
						n++;
					}
				}
			}
			int result = 0;
			int resultValue = acceptors[0].propseResponse.get(num).getValue();
			for (int i = 1; i < acceptors.length; i++) {
				if(resultValue!=acceptors[i].propseResponse.get(num).getValue().intValue()) {
					result = 1;
					System.out.println("提议者"+this.getName()+"所有结果的value不一致");
					break;
				}
			}

			
		}
		
	}

}